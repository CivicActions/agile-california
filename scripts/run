#!/usr/bin/env bash

# Make sure we are in the scripts directory.
cd $(dirname $0)
source include.bash
source lib/dispatch.sh
declare -A RUN_HELP
declare -A RUN_HELP_DETAIL
for subcommand in subcommands/run_*
  do source $subcommand
done

FIG=${FIG-fig}

# If this isn't the docker container, call this script in the container.
if [ $(pwd) != '/var/www/scripts' ]; then
  cd ..
  container=$($FIG ps|grep web|grep -v Exit|awk '{print $1}')
  if [[ ! $container ]]; then
    # Only run build if container is not running.
    ./scripts/build
    container=$($FIG ps|grep web|grep -v Exit|awk '{print $1}')
  fi
  docker exec -it $container /var/www/scripts/run $@
  exit
fi


#### The run steps.
echo -e "\033[32m# RUNNING TESTS\033[m"
cd ..

# Check Drush.
cd docroot
echo -e "\033[34mdrush status:"
../vendor/drush/drush/drush status
echo -e "\033[m"
cd ..

sleep 1

# Run tests.
echo -e "\033[32mRunning tests\033[m"
echo "Cleaning up previous test results."
rm -fv logs/xml/TEST*.xml
PROGRESS_LOG='logs/progress.log'

# Dispatch the arguments
dispatch run "$@"

EXIT=$?
echo -e "\033[m"
echo Exit Status: $EXIT
exit $EXIT
